from django.conf import settings
from django.urls import reverse
from telebot import types
from telebot.types import KeyboardButton, ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton

from app.models import EquipmentCategory

callback_data_values = []


def get_contact_keyboard():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(KeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç', request_contact=True))
    return keyboard


def client_status_keyboard():
    keyboard = InlineKeyboardMarkup()
    keyboard.row(
        InlineKeyboardButton(text='üôÇ–§–∏–∑–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ', callback_data='–§–∏–∑–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ'),
        InlineKeyboardButton(text='üòé–Æ—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ', callback_data='–Æ—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ')
    )
    return keyboard


def client_target_keyboard():
    keyboard = InlineKeyboardMarkup(row_width=1)
    equipment_categories = EquipmentCategory.objects.all()
    for category in equipment_categories:
        callback_data = category.title.lower()
        callback_data_values.append(callback_data)
        keyboard.add(
            InlineKeyboardButton(text=category.button_text, callback_data=callback_data)
        )
    full_catalog_callback_data = 'full_equipment_catalog'
    callback_data_values.append(full_catalog_callback_data)

    keyboard.add(
        InlineKeyboardButton(text='–•–æ—á—É –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å—ë —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å',
                             callback_data=full_catalog_callback_data)
    )

    return keyboard


def personal_preferences_keyboard():
    keyboard = InlineKeyboardMarkup(row_width=1)
    keyboard.add(
        InlineKeyboardButton(text='–†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é –∫–∞–∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥', callback_data='spin_off'),
        InlineKeyboardButton(text='–°—Ç—Ä–æ—é —Å–µ–±–µ –¥–æ–º, –Ω–µ —Ö–æ—á—É –Ω–∞–Ω–∏–º–∞—Ç—å —Ç–µ—Ö–Ω–∏–∫—É', callback_data='building_for_self'),
        InlineKeyboardButton(text='–ó–∞–Ω–∏–º–∞—é—Å—å –ø—Ä–æ–∫–ª–∞–¥—ã–≤–∞–Ω–∏–µ–º —ç–ª. —Å–µ—Ç–µ–π', callback_data='laying'),
        InlineKeyboardButton(text='–°—Ç—Ä–æ—é –¥–æ–º–∞ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É', callback_data='building_for_sale'),
        InlineKeyboardButton(text='–ó–∞–Ω–∏–º–∞—é—Å—å –ª–∞–Ω–¥—à–∞—Ñ—Ç–Ω—ã–º–∏ —Ä–∞–±–æ—Ç–∞–º–∏ –∏ –æ–∑–µ–ª–µ–Ω–µ–Ω–∏–µ–º', callback_data='landscape_works'),
        InlineKeyboardButton(text='–ó–∞–Ω–∏–º–∞—é—Å—å —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π —Å–µ–ø—Ç–∏–∫–æ–≤ –∏ –ø—Ä–æ–∫–ª–∞–¥—ã–≤–∞–Ω–∏–µ–º –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–π',
                             callback_data='install'),
        InlineKeyboardButton(
            text='–¢–µ—Ö–Ω–∏–∫–∞ –Ω—É–∂–Ω–∞ –∫–∞–∫ –ø–æ–¥—Å–æ–±–Ω—ã–π —Ä–∞–±–æ—á–∏–π. –ü–æ—á–∏—Å—Ç–∏—Ç—å —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é –æ—Ç —Å–Ω–µ–≥–∞ –∏–ª–∏ –ø–æ–≥—Ä—É–∑–∫–∞/—Ä–∞–∑–≥—Ä—É–∑–∫–∞',
            callback_data='worker'),
        InlineKeyboardButton(text='–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π. –°—Ñ–µ—Ä–∞ –ñ–ö–•', callback_data='service'),
        InlineKeyboardButton(text='–ü—Ä–æ—Å—Ç–æ –¥–ª—è —Å–µ–±—è/–¥–ª—è –¥—É—à–∏', callback_data='for_self'),
    )
    return keyboard


def budget_keyboard(previous_state):
    keyboard = InlineKeyboardMarkup(row_width=1)
    keyboard.add(
        InlineKeyboardButton(text='–î–æ 600 —Ç—ã—Å. —Ä—É–±.', callback_data='up_to_600t'),
        InlineKeyboardButton(text='–î–æ 1,5 –º–ª–Ω. —Ä—É–±.', callback_data='up_to_1.5m'),
        InlineKeyboardButton(text='–î–æ 3 –º–ª–Ω. —Ä—É–±', callback_data='up_to_3m'),
        InlineKeyboardButton(text='–ù–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω', callback_data='not_limited'),
    )
    keyboard.add(back_button(previous_state))

    return keyboard


def missing_catalog_keyboard(general_catalog, previous_state):
    markup = InlineKeyboardMarkup()
    for item in general_catalog:
        web_app_url = f'https://{settings.ALLOWED_HOSTS[0]}' + reverse('app:general-catalog-pdf-view',
                                                                       args=[item.pk])
        keyboard = InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–µ—Å—å –∫–∞—Ç–∞–ª–æ–≥', web_app=types.WebAppInfo(url=web_app_url))
        markup.add(keyboard)
    markup.add(contact_button())
    markup.add(back_button(previous_state))
    return markup


def generate_equipment_markup(equipment, previous_state):
    markup = InlineKeyboardMarkup()
    for item in equipment:
        web_app_url = f'https://{settings.ALLOWED_HOSTS[0]}' + reverse('app:equipment-pdf-view',
                                                                       args=[item.pk])
        keyboard = InlineKeyboardButton(text=item.title, web_app=types.WebAppInfo(url=web_app_url))
        markup.add(keyboard)
    markup.add(back_button(previous_state))
    return markup


def contact_button():
    text = '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç'
    callback_data = 'contact'
    button = InlineKeyboardButton(text=text, callback_data=callback_data)
    return button


def back_button_in_contact(previous_state):
    markup = InlineKeyboardMarkup()
    return markup.add(back_button(previous_state))


def back_button(previous_state):
    text = '–ù–∞–∑–∞–¥'
    callback_data = f'back_to_{previous_state}'
    button = InlineKeyboardButton(text=text, callback_data=callback_data)
    return button
